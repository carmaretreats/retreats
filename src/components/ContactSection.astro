---
import { isInputError } from "astro:actions";
import { actions } from "astro:actions";
import data from "../content/retreats-page.json";
const kontakt = data.kontakt;
const retreats = data.retreats;
const retreatOptions = retreats.map((r) => ({
  id: r.id,
  title: r.title
}));
const form = kontakt.form;
const result = Astro.getActionResult(actions.send);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};

let previousValues = {};
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    previousValues = Object.fromEntries(formData.entries());
  } catch (err) {
    console.error("Could not read form data:", err);
  }
}
---

<section id={kontakt.id} class="relative section bg-cream-bg text-dark-brown font-sans">
  <div class="section-inner relative z-10">

    <!-- 🏷️ SECTION LABEL + TITLE -->
    <div class="max-w-3xl mb-8">
      <p class="uppercase section-label mb-8">{kontakt.sectionLabel}</p>
      <h2 style="font-family: 'EditorialOld', sans-serif; font-style: italic;" class="heading-main mb-6">
        {kontakt.heading}
      </h2>
    </div>

    <!-- 🧭 GRID: Paragraph left / Form right -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-12 lg:gap-20 items-start">
      
      <!-- 📝 LEFT COLUMN — Paragraph -->
      <div class="max-w-lg">
        <p class="body-text text-dark-brown">
          {kontakt.description}
        </p>
      </div>

      <!-- 📨 RIGHT COLUMN — Form -->
      <form action={actions.send} x-data="retreatForm()" @submit="localStorage.removeItem('selectedRetreat')" method="post" novalidate class="space-y-8">
        <!-- Retreat Selection -->
        <div class="space-y-4">
          <label class="block mb-2 font-garamond italic text-xl md:text-2xl leading-[1.2] text-dark-brown">
            {form.retreat.label}
          </label>
          <div class="space-y-2">
            {retreatOptions.map((r) => (
              <label class="flex items-center gap-3 font-sans text-[14px] md:text-[18px] leading-[1.4]">
                <input
                  type="radio"
                  name="retreat"
                  value={r.id}
                  x-model="selectedRetreat"
                  class="accent-[var(--color-accent-orange)]"
                />
                {r.title}
              </label>
            ))}
          </div>
        </div>

        <div x-show="selectedRetreat" x-cloak>
          <label class="block mb-2 font-garamond italic text-xl md:text-2xl leading-[1.2] text-dark-brown">
            {form.accommodation.label}
          </label>
          <template x-for="option in accommodationOptions[selectedRetreat]" :key="option">
            <label class="flex items-center gap-3 font-sans text-[14px] xs:text-[14px] md:text-[18px] leading-[1.4]">
              <input
                type="radio"
                name="accommodation"
                :value="option"
                class="accent-[var(--color-accent-orange)]"
              />
              <span x-text="option"></span>
            </label>
          </template>
        </div>

        <!-- Name -->
        <div>
          <label class="block mb-2 font-garamond italic text-xl md:text-2xl leading-[1.2] text-dark-brown">
            {form.name.label}
          </label>
          <input
            type="text"
            name="name"
            value={previousValues.name || ""}
            placeholder="Gib hier deinen Namen an"
            class="w-full text-dark-brown placeholder-black/50 bg-white border-b border-black py-3 focus:outline-none focus:border-accent-orange font-sans text-[14px] xs:text-[14px] md:text-[18px] leading-[1.4]"
            aria-describedby={inputErrors.name ? "name-error" : undefined}
            required
          />
          {inputErrors.name && (
            <p id="name-error" class="text-accent-orange mt-1 text-sm">{form.name.errorMessage}</p>
          )}
        </div>

        <!-- Email -->
        <div>
          <label class="block mb-2 font-garamond italic text-xl md:text-2xl leading-[1.2] text-dark-brown">
            {form.email.label}
          </label>
          <input
            type="email"
            name="email"
            value={previousValues.email || ""}
            placeholder="Gib hier deine E-Mail-Adresse ein"
            class="w-full text-dark-brown placeholder-black/50 bg-white border-b border-black py-3 focus:outline-none focus:border-accent-orange font-sans text-[14px] xs:text-[14px] md:text-[18px] leading-[1.4]"
            aria-describedby={inputErrors.email ? "email-error" : undefined}
            required
          />
          {inputErrors.email && (
            <p id="email-error" class="text-accent-orange mt-1 text-sm">{form.email.errorMessage}</p>
          )}
        </div>

        <!-- Message -->
        <div>
          <label class="block mb-2 font-garamond italic text-xl md:text-2xl leading-[1.2] text-dark-brown">
            {form.lead_message.label}
          </label>
          <textarea
            rows="5"
            name="lead_message"
            placeholder="Schreib uns hier, um deinen Platz zu buchen oder wenn du weitere Fragen hast."
            class="w-full text-dark-brown placeholder-black/50 bg-white border-b border-black py-3 resize-none focus:outline-none focus:border-accent-orange font-sans text-[14px] xs:text-[14px] md:text-[18px] leading-[1.4]"
          >{previousValues.lead_message || ""}</textarea>
        </div>

        <!-- Submit Button -->
        <div>
          <button
            type="submit"
            class="inline-block w-full md:w-auto text-center rounded-full uppercase font-sora text-white tracking-widest text-base md:text-lg px-10 py-4 shadow-md transition-colors duration-300 bg-[var(--color-accent-orange)] hover:bg-[#bb421d] focus:ring-2 focus:ring-[var(--color-accent-orange)] focus:ring-offset-2 focus:ring-offset-cream-bg"
          >
            {form.submitButton.label}
          </button>
        </div>
      </form>
    </div>
  </div>
</section>

{Object.keys(inputErrors).length > 0 && (
  <script>
    window.location.hash = "#kontakt";
  </script>
)}